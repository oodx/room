# ROOM RUNTIME & PLUGIN ROADMAP
# Generated: 2025-09-18
# Epic 2: Runtime, Plugins, and Tooling

## REFERENCES
- REF-ROOM-101: docs/RUNTIME_STRAT.md — runtime lifecycle, logging, benchmarking.
- REF-ROOM-102: BACKLOG.md — open items from MVP roadmap.
- REF-ROOM-103: docs/STRATEGY.md — original architecture notes.

## MILESTONE 6: Runtime Core (Priority: CRITICAL)

### [ ] ROOM-601: Scaffold RoomRuntime coordinator [5 pts]
- Implement `RoomRuntime` struct owning layout, registry, renderer, event loop.
- Add basic `Event` enum and polling over stdin + timer.
- Provide `run()` with graceful shutdown and cursor restore guarantees.

### [ ] ROOM-602: Define plugin system & port chat demo [5 pts]
- Introduce `RoomPlugin` trait with `on_event`/`before_render` hooks.
- Extract chat input, status bar, scripted bot into plugins.
- Update `examples/chat_demo.rs` (or new runtime demo) to use runtime + plugins.

## MILESTONE 7: Observability & Performance (Priority: HIGH)

### [ ] ROOM-603: Structured logging + metrics scaffold [3 pts]
- Add feature-gated logging facade with rotating JSONL file output.
- Emit runtime lifecycle events (`event_received`, `token_applied`, `render_span`).
- Surface basic metrics (render FPS, dirty zone counts) via log snapshots.

### [ ] ROOM-604: Benchmark harness (Criterion) [3 pts]
- Add benchmarking crate covering layout solve, render diffs, end-to-end loop.
- Ensure benches replay recorded event traces for regression detection.
- Wire into CI (or document manual invocation) with baseline comparison guidance.

## MILESTONE 8: Declarative Layout & Examples (Priority: MEDIUM)

### [ ] ROOM-605: Layout DSL prototype [4 pts]
- Design minimal DSL (YAML/HTML-like) that compiles to `LayoutTree` + zone metadata.
- Support plugin/component declarations (e.g., `<chat-input channel="app:input"/>`).
- Recreate chat layout via DSL to validate compiler.

### [ ] ROOM-606: Align workshops with runtime [2 pts]
- Rework `chat_workshop` to run on `RoomRuntime` with token stream compliance.
- Promote slash command/preferences logic into reusable plugins/adapters.
- Document usage in README or dedicated tutorials.

---

## STATUS LEGEND
- [ ] Not Started
- [~] In Progress
- [x] Complete

(Use checklist updates alongside commits to reflect progress.)
